{"dependencies":[{"name":"/Users/summertime/Documents/GitHub/tfjs_CNN_example2/package.json","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs_CNN_example2/.babelrc","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs_CNN_example2/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":1520897090000},{"name":"vega-util","loc":{"line":20,"column":26}},{"name":"../../aggregate","loc":{"line":21,"column":26}},{"name":"../../bin","loc":{"line":22,"column":20}},{"name":"../../channel","loc":{"line":23,"column":24}},{"name":"../../data","loc":{"line":24,"column":21}},{"name":"../../datetime","loc":{"line":25,"column":25}},{"name":"../../log","loc":{"line":26,"column":18}},{"name":"../../scale","loc":{"line":27,"column":22}},{"name":"../../sort","loc":{"line":28,"column":21}},{"name":"../../util","loc":{"line":30,"column":19}},{"name":"../../vega.schema","loc":{"line":32,"column":28}},{"name":"../common","loc":{"line":33,"column":23}},{"name":"../data/optimize","loc":{"line":34,"column":25}},{"name":"../model","loc":{"line":35,"column":22}},{"name":"../selection/selection","loc":{"line":36,"column":26}}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar aggregate_1 = require(\"../../aggregate\");\nvar bin_1 = require(\"../../bin\");\nvar channel_1 = require(\"../../channel\");\nvar data_1 = require(\"../../data\");\nvar datetime_1 = require(\"../../datetime\");\nvar log = require(\"../../log\");\nvar scale_1 = require(\"../../scale\");\nvar sort_1 = require(\"../../sort\");\nvar util_1 = require(\"../../util\");\nvar util = require(\"../../util\");\nvar vega_schema_1 = require(\"../../vega.schema\");\nvar vega_schema_2 = require(\"../../vega.schema\");\nvar common_1 = require(\"../common\");\nvar optimize_1 = require(\"../data/optimize\");\nvar model_1 = require(\"../model\");\nvar selection_1 = require(\"../selection/selection\");\nfunction parseScaleDomain(model) {\n    if (model_1.isUnitModel(model)) {\n        parseUnitScaleDomain(model);\n    }\n    else {\n        parseNonUnitScaleDomain(model);\n    }\n}\nexports.parseScaleDomain = parseScaleDomain;\nfunction parseUnitScaleDomain(model) {\n    var scales = model.specifiedScales;\n    var localScaleComponents = model.component.scales;\n    util.keys(localScaleComponents).forEach(function (channel) {\n        var specifiedScale = scales[channel];\n        var specifiedDomain = specifiedScale ? specifiedScale.domain : undefined;\n        var domains = parseDomainForChannel(model, channel);\n        var localScaleCmpt = localScaleComponents[channel];\n        localScaleCmpt.domains = domains;\n        if (scale_1.isSelectionDomain(specifiedDomain)) {\n            // As scale parsing occurs before selection parsing, we use a temporary\n            // signal here and append the scale.domain definition. This is replaced\n            // with the correct domainRaw signal during scale assembly.\n            // For more information, see isRawSelectionDomain in selection.ts.\n            // FIXME: replace this with a special property in the scaleComponent\n            localScaleCmpt.set('domainRaw', {\n                signal: selection_1.SELECTION_DOMAIN + util_1.hash(specifiedDomain)\n            }, true);\n        }\n        if (model.component.data.isFaceted) {\n            // get resolve from closest facet parent as this decides whether we need to refer to cloned subtree or not\n            var facetParent = model;\n            while (!model_1.isFacetModel(facetParent) && facetParent.parent) {\n                facetParent = facetParent.parent;\n            }\n            var resolve = facetParent.component.resolve.scale[channel];\n            if (resolve === 'shared') {\n                for (var _i = 0, domains_1 = domains; _i < domains_1.length; _i++) {\n                    var domain = domains_1[_i];\n                    // Replace the scale domain with data output from a cloned subtree after the facet.\n                    if (vega_schema_2.isDataRefDomain(domain)) {\n                        // use data from cloned subtree (which is the same as data but with a prefix added once)\n                        domain.data = optimize_1.FACET_SCALE_PREFIX + domain.data.replace(optimize_1.FACET_SCALE_PREFIX, '');\n                    }\n                }\n            }\n        }\n    });\n}\nfunction parseNonUnitScaleDomain(model) {\n    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        parseScaleDomain(child);\n    }\n    var localScaleComponents = model.component.scales;\n    util.keys(localScaleComponents).forEach(function (channel) {\n        // FIXME: Arvind -- Please revise logic for merging selectionDomain / domainRaw\n        var domains;\n        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childComponent = child.component.scales[channel];\n            if (childComponent) {\n                if (domains === undefined) {\n                    domains = childComponent.domains;\n                }\n                else {\n                    domains = domains.concat(childComponent.domains);\n                }\n            }\n        }\n        localScaleComponents[channel].domains = domains;\n    });\n}\n/**\n * Remove unaggregated domain if it is not applicable\n * Add unaggregated domain if domain is not specified and config.scale.useUnaggregatedDomain is true.\n */\nfunction normalizeUnaggregatedDomain(domain, fieldDef, scaleType, scaleConfig) {\n    if (domain === 'unaggregated') {\n        var _a = canUseUnaggregatedDomain(fieldDef, scaleType), valid = _a.valid, reason = _a.reason;\n        if (!valid) {\n            log.warn(reason);\n            return undefined;\n        }\n    }\n    else if (domain === undefined && scaleConfig.useUnaggregatedDomain) {\n        // Apply config if domain is not specified.\n        var valid = canUseUnaggregatedDomain(fieldDef, scaleType).valid;\n        if (valid) {\n            return 'unaggregated';\n        }\n    }\n    return domain;\n}\nfunction parseDomainForChannel(model, channel) {\n    var scaleType = model.getScaleComponent(channel).get('type');\n    var domain = normalizeUnaggregatedDomain(model.scaleDomain(channel), model.fieldDef(channel), scaleType, model.config.scale);\n    if (domain !== model.scaleDomain(channel)) {\n        model.specifiedScales[channel] = __assign({}, model.specifiedScales[channel], { domain: domain });\n    }\n    // If channel is either X or Y then union them with X2 & Y2 if they exist\n    if (channel === 'x' && model.channelHasField('x2')) {\n        if (model.channelHasField('x')) {\n            return parseSingleChannelDomain(scaleType, domain, model, 'x').concat(parseSingleChannelDomain(scaleType, domain, model, 'x2'));\n        }\n        else {\n            return parseSingleChannelDomain(scaleType, domain, model, 'x2');\n        }\n    }\n    else if (channel === 'y' && model.channelHasField('y2')) {\n        if (model.channelHasField('y')) {\n            return parseSingleChannelDomain(scaleType, domain, model, 'y').concat(parseSingleChannelDomain(scaleType, domain, model, 'y2'));\n        }\n        else {\n            return parseSingleChannelDomain(scaleType, domain, model, 'y2');\n        }\n    }\n    return parseSingleChannelDomain(scaleType, domain, model, channel);\n}\nexports.parseDomainForChannel = parseDomainForChannel;\nfunction parseSingleChannelDomain(scaleType, domain, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    if (domain && domain !== 'unaggregated' && !scale_1.isSelectionDomain(domain)) {\n        if (fieldDef.bin) {\n            log.warn(log.message.conflictedDomain(channel));\n        }\n        else {\n            if (datetime_1.isDateTime(domain[0])) {\n                return domain.map(function (dt) {\n                    return { signal: \"{data: \" + datetime_1.dateTimeExpr(dt, true) + \"}\" };\n                });\n            }\n            return [domain];\n        }\n    }\n    var stack = model.stack;\n    if (stack && channel === stack.fieldChannel) {\n        if (stack.offset === 'normalize') {\n            return [[0, 1]];\n        }\n        var data = model.requestDataName(data_1.MAIN);\n        return [{\n                data: data,\n                field: model.vgField(channel, { suffix: 'start' })\n            }, {\n                data: data,\n                field: model.vgField(channel, { suffix: 'end' })\n            }];\n    }\n    var sort = channel_1.isScaleChannel(channel) ? domainSort(model, channel, scaleType) : undefined;\n    if (domain === 'unaggregated') {\n        var data = model.requestDataName(data_1.MAIN);\n        return [{\n                data: data,\n                field: model.vgField(channel, { aggregate: 'min' })\n            }, {\n                data: data,\n                field: model.vgField(channel, { aggregate: 'max' })\n            }];\n    }\n    else if (fieldDef.bin) {\n        if (scale_1.isBinScale(scaleType)) {\n            var signal = model.getName(bin_1.binToString(fieldDef.bin) + \"_\" + fieldDef.field + \"_bins\");\n            return [{ signal: \"sequence(\" + signal + \".start, \" + signal + \".stop + \" + signal + \".step, \" + signal + \".step)\" }];\n        }\n        if (scale_1.hasDiscreteDomain(scaleType)) {\n            // ordinal bin scale takes domain from bin_range, ordered by bin start\n            // This is useful for both axis-based scale (x/y) and legend-based scale (other channels).\n            return [{\n                    // If sort by aggregation of a specified sort field, we need to use RAW table,\n                    // so we can aggregate values for the scale independently from the main aggregation.\n                    data: util.isBoolean(sort) ? model.requestDataName(data_1.MAIN) : model.requestDataName(data_1.RAW),\n                    // Use range if we added it and the scale does not support computing a range as a signal.\n                    field: model.vgField(channel, common_1.binRequiresRange(fieldDef, channel) ? { binSuffix: 'range' } : {}),\n                    // we have to use a sort object if sort = true to make the sort correct by bin start\n                    sort: sort === true || !sort_1.isSortField(sort) ? {\n                        field: model.vgField(channel, {}),\n                        op: 'min' // min or max doesn't matter since we sort by the start of the bin range\n                    } : sort\n                }];\n        }\n        else {\n            if (channel === 'x' || channel === 'y') {\n                // X/Y position have to include start and end for non-ordinal scale\n                var data = model.requestDataName(data_1.MAIN);\n                return [{\n                        data: data,\n                        field: model.vgField(channel, {})\n                    }, {\n                        data: data,\n                        field: model.vgField(channel, { binSuffix: 'end' })\n                    }];\n            }\n            else {\n                // TODO: use bin_mid\n                return [{\n                        data: model.requestDataName(data_1.MAIN),\n                        field: model.vgField(channel, {})\n                    }];\n            }\n        }\n    }\n    else if (sort) {\n        return [{\n                // If sort by aggregation of a specified sort field, we need to use RAW table,\n                // so we can aggregate values for the scale independently from the main aggregation.\n                data: util.isBoolean(sort) ? model.requestDataName(data_1.MAIN) : model.requestDataName(data_1.RAW),\n                field: model.vgField(channel),\n                sort: sort\n            }];\n    }\n    else {\n        return [{\n                data: model.requestDataName(data_1.MAIN),\n                field: model.vgField(channel)\n            }];\n    }\n}\nfunction domainSort(model, channel, scaleType) {\n    if (!scale_1.hasDiscreteDomain(scaleType)) {\n        return undefined;\n    }\n    var sort = model.sort(channel);\n    // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)\n    if (sort_1.isSortField(sort)) {\n        return sort;\n    }\n    if (sort === 'descending') {\n        return {\n            op: 'min',\n            field: model.vgField(channel),\n            order: 'descending'\n        };\n    }\n    if (util.contains(['ascending', undefined /* default =ascending*/], sort)) {\n        return true;\n    }\n    // sort == null\n    return undefined;\n}\nexports.domainSort = domainSort;\n/**\n * Determine if a scale can use unaggregated domain.\n * @return {Boolean} Returns true if all of the following conditons applies:\n * 1. `scale.domain` is `unaggregated`\n * 2. Aggregation function is not `count` or `sum`\n * 3. The scale is quantitative or time scale.\n */\nfunction canUseUnaggregatedDomain(fieldDef, scaleType) {\n    if (!fieldDef.aggregate) {\n        return {\n            valid: false,\n            reason: log.message.unaggregateDomainHasNoEffectForRawField(fieldDef)\n        };\n    }\n    if (!aggregate_1.SHARED_DOMAIN_OP_INDEX[fieldDef.aggregate]) {\n        return {\n            valid: false,\n            reason: log.message.unaggregateDomainWithNonSharedDomainOp(fieldDef.aggregate)\n        };\n    }\n    if (fieldDef.type === 'quantitative') {\n        if (scaleType === 'log') {\n            return {\n                valid: false,\n                reason: log.message.unaggregatedDomainWithLogScale(fieldDef)\n            };\n        }\n    }\n    return { valid: true };\n}\nexports.canUseUnaggregatedDomain = canUseUnaggregatedDomain;\n/**\n * Converts an array of domains to a single Vega scale domain.\n */\nfunction mergeDomains(domains) {\n    var uniqueDomains = util.unique(domains.map(function (domain) {\n        // ignore sort property when computing the unique domains\n        if (vega_schema_2.isDataRefDomain(domain)) {\n            var _s = domain.sort, domainWithoutSort = __rest(domain, [\"sort\"]);\n            return domainWithoutSort;\n        }\n        return domain;\n    }), util.hash);\n    var sorts = util.unique(domains.map(function (d) {\n        if (vega_schema_2.isDataRefDomain(d)) {\n            var s = d.sort;\n            if (s !== undefined && !util.isBoolean(s)) {\n                if (s.op === 'count') {\n                    // let's make sure that if op is count, we don't use a field\n                    delete s.field;\n                }\n                if (s.order === 'ascending') {\n                    // drop order: ascending as it is the default\n                    delete s.order;\n                }\n            }\n            return s;\n        }\n        return undefined;\n    }).filter(function (s) { return s !== undefined; }), util.hash);\n    if (uniqueDomains.length === 1) {\n        var domain = domains[0];\n        if (vega_schema_2.isDataRefDomain(domain) && sorts.length > 0) {\n            var sort_2 = sorts[0];\n            if (sorts.length > 1) {\n                log.warn(log.message.MORE_THAN_ONE_SORT);\n                sort_2 = true;\n            }\n            return __assign({}, domain, { sort: sort_2 });\n        }\n        return domain;\n    }\n    // only keep simple sort properties that work with unioned domains\n    var simpleSorts = util.unique(sorts.map(function (s) {\n        if (s === true) {\n            return s;\n        }\n        if (s.op === 'count') {\n            return s;\n        }\n        log.warn(log.message.domainSortDropped(s));\n        return true;\n    }), util.hash);\n    var sort = undefined;\n    if (simpleSorts.length === 1) {\n        sort = simpleSorts[0];\n    }\n    else if (simpleSorts.length > 1) {\n        log.warn(log.message.MORE_THAN_ONE_SORT);\n        sort = true;\n    }\n    var allData = util.unique(domains.map(function (d) {\n        if (vega_schema_2.isDataRefDomain(d)) {\n            return d.data;\n        }\n        return null;\n    }), function (x) { return x; });\n    if (allData.length === 1 && allData[0] !== null) {\n        // create a union domain of different fields with a single data source\n        var domain = __assign({ data: allData[0], fields: uniqueDomains.map(function (d) { return d.field; }) }, (sort ? { sort: sort } : {}));\n        return domain;\n    }\n    return __assign({ fields: uniqueDomains }, (sort ? { sort: sort } : {}));\n}\nexports.mergeDomains = mergeDomains;\n/**\n * Return a field if a scale single field.\n * Return `undefined` otherwise.\n *\n */\nfunction getFieldFromDomain(domain) {\n    if (vega_schema_2.isDataRefDomain(domain) && vega_util_1.isString(domain.field)) {\n        return domain.field;\n    }\n    else if (vega_schema_1.isDataRefUnionedDomain(domain)) {\n        var field = void 0;\n        for (var _i = 0, _a = domain.fields; _i < _a.length; _i++) {\n            var nonUnionDomain = _a[_i];\n            if (vega_schema_2.isDataRefDomain(nonUnionDomain) && vega_util_1.isString(nonUnionDomain.field)) {\n                if (!field) {\n                    field = nonUnionDomain.field;\n                }\n                else if (field !== nonUnionDomain.field) {\n                    log.warn('Detected faceted independent scales that union domain of multiple fields from different data sources.  We will use the first field.  The result view size may be incorrect.');\n                    return field;\n                }\n            }\n        }\n        log.warn('Detected faceted independent scales that union domain of identical fields from different source detected.  We will assume that this is the same field from a different fork of the same data source.  However, if this is not case, the result view size maybe incorrect.');\n        return field;\n    }\n    else if (vega_schema_1.isFieldRefUnionDomain(domain)) {\n        log.warn('Detected faceted independent scales that union domain of multiple fields from the same data source.  We will use the first field.  The result view size may be incorrect.');\n        var field = domain.fields[0];\n        return vega_util_1.isString(field) ? field : undefined;\n    }\n    return undefined;\n}\nexports.getFieldFromDomain = getFieldFromDomain;\nfunction assembleDomain(model, channel) {\n    var scaleComponent = model.component.scales[channel];\n    var domains = scaleComponent.domains.map(function (domain) {\n        // Correct references to data as the original domain's data was determined\n        // in parseScale, which happens before parseData. Thus the original data\n        // reference can be incorrect.\n        if (vega_schema_2.isDataRefDomain(domain)) {\n            domain.data = model.lookupDataSource(domain.data);\n        }\n        return domain;\n    });\n    // domains is an array that has to be merged into a single vega domain\n    return mergeDomains(domains);\n}\nexports.assembleDomain = assembleDomain;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/scale/domain.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}}],"sources":{"node_modules/vega-lite/build/src/compile/scale/domain.js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar aggregate_1 = require(\"../../aggregate\");\nvar bin_1 = require(\"../../bin\");\nvar channel_1 = require(\"../../channel\");\nvar data_1 = require(\"../../data\");\nvar datetime_1 = require(\"../../datetime\");\nvar log = require(\"../../log\");\nvar scale_1 = require(\"../../scale\");\nvar sort_1 = require(\"../../sort\");\nvar util_1 = require(\"../../util\");\nvar util = require(\"../../util\");\nvar vega_schema_1 = require(\"../../vega.schema\");\nvar vega_schema_2 = require(\"../../vega.schema\");\nvar common_1 = require(\"../common\");\nvar optimize_1 = require(\"../data/optimize\");\nvar model_1 = require(\"../model\");\nvar selection_1 = require(\"../selection/selection\");\nfunction parseScaleDomain(model) {\n    if (model_1.isUnitModel(model)) {\n        parseUnitScaleDomain(model);\n    }\n    else {\n        parseNonUnitScaleDomain(model);\n    }\n}\nexports.parseScaleDomain = parseScaleDomain;\nfunction parseUnitScaleDomain(model) {\n    var scales = model.specifiedScales;\n    var localScaleComponents = model.component.scales;\n    util.keys(localScaleComponents).forEach(function (channel) {\n        var specifiedScale = scales[channel];\n        var specifiedDomain = specifiedScale ? specifiedScale.domain : undefined;\n        var domains = parseDomainForChannel(model, channel);\n        var localScaleCmpt = localScaleComponents[channel];\n        localScaleCmpt.domains = domains;\n        if (scale_1.isSelectionDomain(specifiedDomain)) {\n            // As scale parsing occurs before selection parsing, we use a temporary\n            // signal here and append the scale.domain definition. This is replaced\n            // with the correct domainRaw signal during scale assembly.\n            // For more information, see isRawSelectionDomain in selection.ts.\n            // FIXME: replace this with a special property in the scaleComponent\n            localScaleCmpt.set('domainRaw', {\n                signal: selection_1.SELECTION_DOMAIN + util_1.hash(specifiedDomain)\n            }, true);\n        }\n        if (model.component.data.isFaceted) {\n            // get resolve from closest facet parent as this decides whether we need to refer to cloned subtree or not\n            var facetParent = model;\n            while (!model_1.isFacetModel(facetParent) && facetParent.parent) {\n                facetParent = facetParent.parent;\n            }\n            var resolve = facetParent.component.resolve.scale[channel];\n            if (resolve === 'shared') {\n                for (var _i = 0, domains_1 = domains; _i < domains_1.length; _i++) {\n                    var domain = domains_1[_i];\n                    // Replace the scale domain with data output from a cloned subtree after the facet.\n                    if (vega_schema_2.isDataRefDomain(domain)) {\n                        // use data from cloned subtree (which is the same as data but with a prefix added once)\n                        domain.data = optimize_1.FACET_SCALE_PREFIX + domain.data.replace(optimize_1.FACET_SCALE_PREFIX, '');\n                    }\n                }\n            }\n        }\n    });\n}\nfunction parseNonUnitScaleDomain(model) {\n    for (var _i = 0, _a = model.children; _i < _a.length; _i++) {\n        var child = _a[_i];\n        parseScaleDomain(child);\n    }\n    var localScaleComponents = model.component.scales;\n    util.keys(localScaleComponents).forEach(function (channel) {\n        // FIXME: Arvind -- Please revise logic for merging selectionDomain / domainRaw\n        var domains;\n        for (var _i = 0, _a = model.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childComponent = child.component.scales[channel];\n            if (childComponent) {\n                if (domains === undefined) {\n                    domains = childComponent.domains;\n                }\n                else {\n                    domains = domains.concat(childComponent.domains);\n                }\n            }\n        }\n        localScaleComponents[channel].domains = domains;\n    });\n}\n/**\n * Remove unaggregated domain if it is not applicable\n * Add unaggregated domain if domain is not specified and config.scale.useUnaggregatedDomain is true.\n */\nfunction normalizeUnaggregatedDomain(domain, fieldDef, scaleType, scaleConfig) {\n    if (domain === 'unaggregated') {\n        var _a = canUseUnaggregatedDomain(fieldDef, scaleType), valid = _a.valid, reason = _a.reason;\n        if (!valid) {\n            log.warn(reason);\n            return undefined;\n        }\n    }\n    else if (domain === undefined && scaleConfig.useUnaggregatedDomain) {\n        // Apply config if domain is not specified.\n        var valid = canUseUnaggregatedDomain(fieldDef, scaleType).valid;\n        if (valid) {\n            return 'unaggregated';\n        }\n    }\n    return domain;\n}\nfunction parseDomainForChannel(model, channel) {\n    var scaleType = model.getScaleComponent(channel).get('type');\n    var domain = normalizeUnaggregatedDomain(model.scaleDomain(channel), model.fieldDef(channel), scaleType, model.config.scale);\n    if (domain !== model.scaleDomain(channel)) {\n        model.specifiedScales[channel] = __assign({}, model.specifiedScales[channel], { domain: domain });\n    }\n    // If channel is either X or Y then union them with X2 & Y2 if they exist\n    if (channel === 'x' && model.channelHasField('x2')) {\n        if (model.channelHasField('x')) {\n            return parseSingleChannelDomain(scaleType, domain, model, 'x').concat(parseSingleChannelDomain(scaleType, domain, model, 'x2'));\n        }\n        else {\n            return parseSingleChannelDomain(scaleType, domain, model, 'x2');\n        }\n    }\n    else if (channel === 'y' && model.channelHasField('y2')) {\n        if (model.channelHasField('y')) {\n            return parseSingleChannelDomain(scaleType, domain, model, 'y').concat(parseSingleChannelDomain(scaleType, domain, model, 'y2'));\n        }\n        else {\n            return parseSingleChannelDomain(scaleType, domain, model, 'y2');\n        }\n    }\n    return parseSingleChannelDomain(scaleType, domain, model, channel);\n}\nexports.parseDomainForChannel = parseDomainForChannel;\nfunction parseSingleChannelDomain(scaleType, domain, model, channel) {\n    var fieldDef = model.fieldDef(channel);\n    if (domain && domain !== 'unaggregated' && !scale_1.isSelectionDomain(domain)) {\n        if (fieldDef.bin) {\n            log.warn(log.message.conflictedDomain(channel));\n        }\n        else {\n            if (datetime_1.isDateTime(domain[0])) {\n                return domain.map(function (dt) {\n                    return { signal: \"{data: \" + datetime_1.dateTimeExpr(dt, true) + \"}\" };\n                });\n            }\n            return [domain];\n        }\n    }\n    var stack = model.stack;\n    if (stack && channel === stack.fieldChannel) {\n        if (stack.offset === 'normalize') {\n            return [[0, 1]];\n        }\n        var data = model.requestDataName(data_1.MAIN);\n        return [{\n                data: data,\n                field: model.vgField(channel, { suffix: 'start' })\n            }, {\n                data: data,\n                field: model.vgField(channel, { suffix: 'end' })\n            }];\n    }\n    var sort = channel_1.isScaleChannel(channel) ? domainSort(model, channel, scaleType) : undefined;\n    if (domain === 'unaggregated') {\n        var data = model.requestDataName(data_1.MAIN);\n        return [{\n                data: data,\n                field: model.vgField(channel, { aggregate: 'min' })\n            }, {\n                data: data,\n                field: model.vgField(channel, { aggregate: 'max' })\n            }];\n    }\n    else if (fieldDef.bin) {\n        if (scale_1.isBinScale(scaleType)) {\n            var signal = model.getName(bin_1.binToString(fieldDef.bin) + \"_\" + fieldDef.field + \"_bins\");\n            return [{ signal: \"sequence(\" + signal + \".start, \" + signal + \".stop + \" + signal + \".step, \" + signal + \".step)\" }];\n        }\n        if (scale_1.hasDiscreteDomain(scaleType)) {\n            // ordinal bin scale takes domain from bin_range, ordered by bin start\n            // This is useful for both axis-based scale (x/y) and legend-based scale (other channels).\n            return [{\n                    // If sort by aggregation of a specified sort field, we need to use RAW table,\n                    // so we can aggregate values for the scale independently from the main aggregation.\n                    data: util.isBoolean(sort) ? model.requestDataName(data_1.MAIN) : model.requestDataName(data_1.RAW),\n                    // Use range if we added it and the scale does not support computing a range as a signal.\n                    field: model.vgField(channel, common_1.binRequiresRange(fieldDef, channel) ? { binSuffix: 'range' } : {}),\n                    // we have to use a sort object if sort = true to make the sort correct by bin start\n                    sort: sort === true || !sort_1.isSortField(sort) ? {\n                        field: model.vgField(channel, {}),\n                        op: 'min' // min or max doesn't matter since we sort by the start of the bin range\n                    } : sort\n                }];\n        }\n        else {\n            if (channel === 'x' || channel === 'y') {\n                // X/Y position have to include start and end for non-ordinal scale\n                var data = model.requestDataName(data_1.MAIN);\n                return [{\n                        data: data,\n                        field: model.vgField(channel, {})\n                    }, {\n                        data: data,\n                        field: model.vgField(channel, { binSuffix: 'end' })\n                    }];\n            }\n            else {\n                // TODO: use bin_mid\n                return [{\n                        data: model.requestDataName(data_1.MAIN),\n                        field: model.vgField(channel, {})\n                    }];\n            }\n        }\n    }\n    else if (sort) {\n        return [{\n                // If sort by aggregation of a specified sort field, we need to use RAW table,\n                // so we can aggregate values for the scale independently from the main aggregation.\n                data: util.isBoolean(sort) ? model.requestDataName(data_1.MAIN) : model.requestDataName(data_1.RAW),\n                field: model.vgField(channel),\n                sort: sort\n            }];\n    }\n    else {\n        return [{\n                data: model.requestDataName(data_1.MAIN),\n                field: model.vgField(channel)\n            }];\n    }\n}\nfunction domainSort(model, channel, scaleType) {\n    if (!scale_1.hasDiscreteDomain(scaleType)) {\n        return undefined;\n    }\n    var sort = model.sort(channel);\n    // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)\n    if (sort_1.isSortField(sort)) {\n        return sort;\n    }\n    if (sort === 'descending') {\n        return {\n            op: 'min',\n            field: model.vgField(channel),\n            order: 'descending'\n        };\n    }\n    if (util.contains(['ascending', undefined /* default =ascending*/], sort)) {\n        return true;\n    }\n    // sort == null\n    return undefined;\n}\nexports.domainSort = domainSort;\n/**\n * Determine if a scale can use unaggregated domain.\n * @return {Boolean} Returns true if all of the following conditons applies:\n * 1. `scale.domain` is `unaggregated`\n * 2. Aggregation function is not `count` or `sum`\n * 3. The scale is quantitative or time scale.\n */\nfunction canUseUnaggregatedDomain(fieldDef, scaleType) {\n    if (!fieldDef.aggregate) {\n        return {\n            valid: false,\n            reason: log.message.unaggregateDomainHasNoEffectForRawField(fieldDef)\n        };\n    }\n    if (!aggregate_1.SHARED_DOMAIN_OP_INDEX[fieldDef.aggregate]) {\n        return {\n            valid: false,\n            reason: log.message.unaggregateDomainWithNonSharedDomainOp(fieldDef.aggregate)\n        };\n    }\n    if (fieldDef.type === 'quantitative') {\n        if (scaleType === 'log') {\n            return {\n                valid: false,\n                reason: log.message.unaggregatedDomainWithLogScale(fieldDef)\n            };\n        }\n    }\n    return { valid: true };\n}\nexports.canUseUnaggregatedDomain = canUseUnaggregatedDomain;\n/**\n * Converts an array of domains to a single Vega scale domain.\n */\nfunction mergeDomains(domains) {\n    var uniqueDomains = util.unique(domains.map(function (domain) {\n        // ignore sort property when computing the unique domains\n        if (vega_schema_2.isDataRefDomain(domain)) {\n            var _s = domain.sort, domainWithoutSort = __rest(domain, [\"sort\"]);\n            return domainWithoutSort;\n        }\n        return domain;\n    }), util.hash);\n    var sorts = util.unique(domains.map(function (d) {\n        if (vega_schema_2.isDataRefDomain(d)) {\n            var s = d.sort;\n            if (s !== undefined && !util.isBoolean(s)) {\n                if (s.op === 'count') {\n                    // let's make sure that if op is count, we don't use a field\n                    delete s.field;\n                }\n                if (s.order === 'ascending') {\n                    // drop order: ascending as it is the default\n                    delete s.order;\n                }\n            }\n            return s;\n        }\n        return undefined;\n    }).filter(function (s) { return s !== undefined; }), util.hash);\n    if (uniqueDomains.length === 1) {\n        var domain = domains[0];\n        if (vega_schema_2.isDataRefDomain(domain) && sorts.length > 0) {\n            var sort_2 = sorts[0];\n            if (sorts.length > 1) {\n                log.warn(log.message.MORE_THAN_ONE_SORT);\n                sort_2 = true;\n            }\n            return __assign({}, domain, { sort: sort_2 });\n        }\n        return domain;\n    }\n    // only keep simple sort properties that work with unioned domains\n    var simpleSorts = util.unique(sorts.map(function (s) {\n        if (s === true) {\n            return s;\n        }\n        if (s.op === 'count') {\n            return s;\n        }\n        log.warn(log.message.domainSortDropped(s));\n        return true;\n    }), util.hash);\n    var sort = undefined;\n    if (simpleSorts.length === 1) {\n        sort = simpleSorts[0];\n    }\n    else if (simpleSorts.length > 1) {\n        log.warn(log.message.MORE_THAN_ONE_SORT);\n        sort = true;\n    }\n    var allData = util.unique(domains.map(function (d) {\n        if (vega_schema_2.isDataRefDomain(d)) {\n            return d.data;\n        }\n        return null;\n    }), function (x) { return x; });\n    if (allData.length === 1 && allData[0] !== null) {\n        // create a union domain of different fields with a single data source\n        var domain = __assign({ data: allData[0], fields: uniqueDomains.map(function (d) { return d.field; }) }, (sort ? { sort: sort } : {}));\n        return domain;\n    }\n    return __assign({ fields: uniqueDomains }, (sort ? { sort: sort } : {}));\n}\nexports.mergeDomains = mergeDomains;\n/**\n * Return a field if a scale single field.\n * Return `undefined` otherwise.\n *\n */\nfunction getFieldFromDomain(domain) {\n    if (vega_schema_2.isDataRefDomain(domain) && vega_util_1.isString(domain.field)) {\n        return domain.field;\n    }\n    else if (vega_schema_1.isDataRefUnionedDomain(domain)) {\n        var field = void 0;\n        for (var _i = 0, _a = domain.fields; _i < _a.length; _i++) {\n            var nonUnionDomain = _a[_i];\n            if (vega_schema_2.isDataRefDomain(nonUnionDomain) && vega_util_1.isString(nonUnionDomain.field)) {\n                if (!field) {\n                    field = nonUnionDomain.field;\n                }\n                else if (field !== nonUnionDomain.field) {\n                    log.warn('Detected faceted independent scales that union domain of multiple fields from different data sources.  We will use the first field.  The result view size may be incorrect.');\n                    return field;\n                }\n            }\n        }\n        log.warn('Detected faceted independent scales that union domain of identical fields from different source detected.  We will assume that this is the same field from a different fork of the same data source.  However, if this is not case, the result view size maybe incorrect.');\n        return field;\n    }\n    else if (vega_schema_1.isFieldRefUnionDomain(domain)) {\n        log.warn('Detected faceted independent scales that union domain of multiple fields from the same data source.  We will use the first field.  The result view size may be incorrect.');\n        var field = domain.fields[0];\n        return vega_util_1.isString(field) ? field : undefined;\n    }\n    return undefined;\n}\nexports.getFieldFromDomain = getFieldFromDomain;\nfunction assembleDomain(model, channel) {\n    var scaleComponent = model.component.scales[channel];\n    var domains = scaleComponent.domains.map(function (domain) {\n        // Correct references to data as the original domain's data was determined\n        // in parseScale, which happens before parseData. Thus the original data\n        // reference can be incorrect.\n        if (vega_schema_2.isDataRefDomain(domain)) {\n            domain.data = model.lookupDataSource(domain.data);\n        }\n        return domain;\n    });\n    // domains is an array that has to be merged into a single vega domain\n    return mergeDomains(domains);\n}\nexports.assembleDomain = assembleDomain;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":431}},"hash":"3fa96a0441a1aba737015f88ee52e4da","cacheData":{"env":{}}}