{"dependencies":[{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/package.json","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/.babelrc","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/node_modules/compare-versions/package.json","includedInParent":true,"mtime":1506397701000}],"generated":{"js":"/* global define */\n(function (root, factory) {\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.compareVersions = factory();\n    }\n}(this, function () {\n\n    var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n    var patch = /-([0-9A-Za-z-.]+)/;\n\n    function split(v) {\n        var temp = v.replace(/^v/, '').split('.');\n        var arr = temp.splice(0, 2);\n        arr.push(temp.join('.'));\n        return arr;\n    }\n\n    function tryParse(v) {\n        return isNaN(Number(v)) ? v : Number(v);\n    }\n\n    function validate(version) {\n        if (typeof version !== 'string') {\n            throw new TypeError('Invalid argument expected string');\n        }\n        if (!semver.test(version)) {\n            throw new Error('Invalid argument not valid semver');\n        }\n    }\n\n    return function compareVersions(v1, v2) {\n        [v1, v2].forEach(validate);\n\n        var s1 = split(v1);\n        var s2 = split(v2);\n\n        for (var i = 0; i < 3; i++) {\n            var n1 = parseInt(s1[i] || 0, 10);\n            var n2 = parseInt(s2[i] || 0, 10);\n\n            if (n1 > n2) return 1;\n            if (n2 > n1) return -1;\n        }\n\n        if ([s1[2], s2[2]].every(patch.test.bind(patch))) {\n            var p1 = patch.exec(s1[2])[1].split('.').map(tryParse);\n            var p2 = patch.exec(s2[2])[1].split('.').map(tryParse);\n\n            for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n                if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n                if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n                if (p1[i] > p2[i]) return 1;\n                if (p2[i] > p1[i]) return -1;\n            }\n        } else if ([s1[2], s2[2]].some(patch.test.bind(patch))) {\n            return patch.test(s1[2]) ? -1 : 1;\n        }\n\n        return 0;\n    };\n\n}));\n","map":{"mappings":[{"source":"node_modules/compare-versions/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/compare-versions/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}}],"sources":{"node_modules/compare-versions/index.js":"/* global define */\n(function (root, factory) {\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define([], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.compareVersions = factory();\n    }\n}(this, function () {\n\n    var semver = /^v?(?:\\d+)(\\.(?:[x*]|\\d+)(\\.(?:[x*]|\\d+)(?:-[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?(?:\\+[\\da-z\\-]+(?:\\.[\\da-z\\-]+)*)?)?)?$/i;\n    var patch = /-([0-9A-Za-z-.]+)/;\n\n    function split(v) {\n        var temp = v.replace(/^v/, '').split('.');\n        var arr = temp.splice(0, 2);\n        arr.push(temp.join('.'));\n        return arr;\n    }\n\n    function tryParse(v) {\n        return isNaN(Number(v)) ? v : Number(v);\n    }\n\n    function validate(version) {\n        if (typeof version !== 'string') {\n            throw new TypeError('Invalid argument expected string');\n        }\n        if (!semver.test(version)) {\n            throw new Error('Invalid argument not valid semver');\n        }\n    }\n\n    return function compareVersions(v1, v2) {\n        [v1, v2].forEach(validate);\n\n        var s1 = split(v1);\n        var s2 = split(v2);\n\n        for (var i = 0; i < 3; i++) {\n            var n1 = parseInt(s1[i] || 0, 10);\n            var n2 = parseInt(s2[i] || 0, 10);\n\n            if (n1 > n2) return 1;\n            if (n2 > n1) return -1;\n        }\n\n        if ([s1[2], s2[2]].every(patch.test.bind(patch))) {\n            var p1 = patch.exec(s1[2])[1].split('.').map(tryParse);\n            var p2 = patch.exec(s2[2])[1].split('.').map(tryParse);\n\n            for (i = 0; i < Math.max(p1.length, p2.length); i++) {\n                if (p1[i] === undefined || typeof p2[i] === 'string' && typeof p1[i] === 'number') return -1;\n                if (p2[i] === undefined || typeof p1[i] === 'string' && typeof p2[i] === 'number') return 1;\n\n                if (p1[i] > p2[i]) return 1;\n                if (p2[i] > p1[i]) return -1;\n            }\n        } else if ([s1[2], s2[2]].some(patch.test.bind(patch))) {\n            return patch.test(s1[2]) ? -1 : 1;\n        }\n\n        return 0;\n    };\n\n}));\n"},"lineCount":69}},"hash":"4557a80f54cfde3b2513302f5b639f49","cacheData":{"env":{}}}