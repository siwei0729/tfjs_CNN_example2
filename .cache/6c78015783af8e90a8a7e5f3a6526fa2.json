{"dependencies":[{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/package.json","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/.babelrc","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":1520897090000},{"name":"vega-util","loc":{"line":11,"column":26}},{"name":"./compile/selection/selection","loc":{"line":12,"column":26}},{"name":"./datetime","loc":{"line":13,"column":25}},{"name":"./fielddef","loc":{"line":14,"column":25}},{"name":"./timeunit","loc":{"line":15,"column":25}},{"name":"./util","loc":{"line":16,"column":21}}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar selection_1 = require(\"./compile/selection/selection\");\nvar datetime_1 = require(\"./datetime\");\nvar fielddef_1 = require(\"./fielddef\");\nvar timeunit_1 = require(\"./timeunit\");\nvar util_1 = require(\"./util\");\nfunction isSelectionPredicate(predicate) {\n    return predicate && predicate['selection'];\n}\nexports.isSelectionPredicate = isSelectionPredicate;\nfunction isFieldEqualPredicate(predicate) {\n    return predicate && !!predicate.field && predicate.equal !== undefined;\n}\nexports.isFieldEqualPredicate = isFieldEqualPredicate;\nfunction isFieldRangePredicate(predicate) {\n    if (predicate && predicate.field) {\n        if (vega_util_1.isArray(predicate.range) && predicate.range.length === 2) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isFieldRangePredicate = isFieldRangePredicate;\nfunction isFieldOneOfPredicate(predicate) {\n    return predicate && !!predicate.field && (vega_util_1.isArray(predicate.oneOf) ||\n        vega_util_1.isArray(predicate.in) // backward compatibility\n    );\n}\nexports.isFieldOneOfPredicate = isFieldOneOfPredicate;\nfunction isFieldPredicate(predicate) {\n    return isFieldOneOfPredicate(predicate) || isFieldEqualPredicate(predicate) || isFieldRangePredicate(predicate);\n}\nexports.isFieldPredicate = isFieldPredicate;\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\nfunction expression(model, filterOp, node) {\n    return util_1.logicalExpr(filterOp, function (predicate) {\n        if (vega_util_1.isString(predicate)) {\n            return predicate;\n        }\n        else if (isSelectionPredicate(predicate)) {\n            return selection_1.selectionPredicate(model, predicate.selection, node);\n        }\n        else {\n            return fieldFilterExpression(predicate);\n        }\n    });\n}\nexports.expression = expression;\n// This method is used by Voyager.  Do not change its behavior without changing Voyager.\nfunction fieldFilterExpression(predicate, useInRange) {\n    if (useInRange === void 0) { useInRange = true; }\n    var fieldExpr = predicate.timeUnit ?\n        // For timeUnit, cast into integer with time() so we can use ===, inrange, indexOf to compare values directly.\n        // TODO: We calculate timeUnit on the fly here. Consider if we would like to consolidate this with timeUnit pipeline\n        // TODO: support utc\n        ('time(' + timeunit_1.fieldExpr(predicate.timeUnit, predicate.field) + ')') :\n        fielddef_1.vgField(predicate, { expr: 'datum' });\n    if (isFieldEqualPredicate(predicate)) {\n        return fieldExpr + '===' + valueExpr(predicate.equal, predicate.timeUnit);\n    }\n    else if (isFieldOneOfPredicate(predicate)) {\n        // \"oneOf\" was formerly \"in\" -- so we need to add backward compatibility\n        var oneOf = predicate.oneOf || predicate['in'];\n        return 'indexof([' +\n            oneOf.map(function (v) { return valueExpr(v, predicate.timeUnit); }).join(',') +\n            '], ' + fieldExpr + ') !== -1';\n    }\n    else if (isFieldRangePredicate(predicate)) {\n        var lower = predicate.range[0];\n        var upper = predicate.range[1];\n        if (lower !== null && upper !== null && useInRange) {\n            return 'inrange(' + fieldExpr + ', [' +\n                valueExpr(lower, predicate.timeUnit) + ', ' +\n                valueExpr(upper, predicate.timeUnit) + '])';\n        }\n        var exprs = [];\n        if (lower !== null) {\n            exprs.push(fieldExpr + \" >= \" + valueExpr(lower, predicate.timeUnit));\n        }\n        if (upper !== null) {\n            exprs.push(fieldExpr + \" <= \" + valueExpr(upper, predicate.timeUnit));\n        }\n        return exprs.length > 0 ? exprs.join(' && ') : 'true';\n    }\n    /* istanbul ignore next: it should never reach here */\n    throw new Error(\"Invalid field predicate: \" + JSON.stringify(predicate));\n}\nexports.fieldFilterExpression = fieldFilterExpression;\nfunction valueExpr(v, timeUnit) {\n    if (datetime_1.isDateTime(v)) {\n        var expr = datetime_1.dateTimeExpr(v, true);\n        return 'time(' + expr + ')';\n    }\n    if (timeunit_1.isLocalSingleTimeUnit(timeUnit)) {\n        var datetime = {};\n        datetime[timeUnit] = v;\n        var expr = datetime_1.dateTimeExpr(datetime, true);\n        return 'time(' + expr + ')';\n    }\n    else if (timeunit_1.isUtcSingleTimeUnit(timeUnit)) {\n        return valueExpr(v, timeunit_1.getLocalTimeUnit(timeUnit));\n    }\n    return JSON.stringify(v);\n}\nfunction normalizePredicate(f) {\n    if (isFieldPredicate(f) && f.timeUnit) {\n        return __assign({}, f, { timeUnit: timeunit_1.normalizeTimeUnit(f.timeUnit) });\n    }\n    return f;\n}\nexports.normalizePredicate = normalizePredicate;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vega-lite/build/src/predicate.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}}],"sources":{"node_modules/vega-lite/build/src/predicate.js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar selection_1 = require(\"./compile/selection/selection\");\nvar datetime_1 = require(\"./datetime\");\nvar fielddef_1 = require(\"./fielddef\");\nvar timeunit_1 = require(\"./timeunit\");\nvar util_1 = require(\"./util\");\nfunction isSelectionPredicate(predicate) {\n    return predicate && predicate['selection'];\n}\nexports.isSelectionPredicate = isSelectionPredicate;\nfunction isFieldEqualPredicate(predicate) {\n    return predicate && !!predicate.field && predicate.equal !== undefined;\n}\nexports.isFieldEqualPredicate = isFieldEqualPredicate;\nfunction isFieldRangePredicate(predicate) {\n    if (predicate && predicate.field) {\n        if (vega_util_1.isArray(predicate.range) && predicate.range.length === 2) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.isFieldRangePredicate = isFieldRangePredicate;\nfunction isFieldOneOfPredicate(predicate) {\n    return predicate && !!predicate.field && (vega_util_1.isArray(predicate.oneOf) ||\n        vega_util_1.isArray(predicate.in) // backward compatibility\n    );\n}\nexports.isFieldOneOfPredicate = isFieldOneOfPredicate;\nfunction isFieldPredicate(predicate) {\n    return isFieldOneOfPredicate(predicate) || isFieldEqualPredicate(predicate) || isFieldRangePredicate(predicate);\n}\nexports.isFieldPredicate = isFieldPredicate;\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\nfunction expression(model, filterOp, node) {\n    return util_1.logicalExpr(filterOp, function (predicate) {\n        if (vega_util_1.isString(predicate)) {\n            return predicate;\n        }\n        else if (isSelectionPredicate(predicate)) {\n            return selection_1.selectionPredicate(model, predicate.selection, node);\n        }\n        else {\n            return fieldFilterExpression(predicate);\n        }\n    });\n}\nexports.expression = expression;\n// This method is used by Voyager.  Do not change its behavior without changing Voyager.\nfunction fieldFilterExpression(predicate, useInRange) {\n    if (useInRange === void 0) { useInRange = true; }\n    var fieldExpr = predicate.timeUnit ?\n        // For timeUnit, cast into integer with time() so we can use ===, inrange, indexOf to compare values directly.\n        // TODO: We calculate timeUnit on the fly here. Consider if we would like to consolidate this with timeUnit pipeline\n        // TODO: support utc\n        ('time(' + timeunit_1.fieldExpr(predicate.timeUnit, predicate.field) + ')') :\n        fielddef_1.vgField(predicate, { expr: 'datum' });\n    if (isFieldEqualPredicate(predicate)) {\n        return fieldExpr + '===' + valueExpr(predicate.equal, predicate.timeUnit);\n    }\n    else if (isFieldOneOfPredicate(predicate)) {\n        // \"oneOf\" was formerly \"in\" -- so we need to add backward compatibility\n        var oneOf = predicate.oneOf || predicate['in'];\n        return 'indexof([' +\n            oneOf.map(function (v) { return valueExpr(v, predicate.timeUnit); }).join(',') +\n            '], ' + fieldExpr + ') !== -1';\n    }\n    else if (isFieldRangePredicate(predicate)) {\n        var lower = predicate.range[0];\n        var upper = predicate.range[1];\n        if (lower !== null && upper !== null && useInRange) {\n            return 'inrange(' + fieldExpr + ', [' +\n                valueExpr(lower, predicate.timeUnit) + ', ' +\n                valueExpr(upper, predicate.timeUnit) + '])';\n        }\n        var exprs = [];\n        if (lower !== null) {\n            exprs.push(fieldExpr + \" >= \" + valueExpr(lower, predicate.timeUnit));\n        }\n        if (upper !== null) {\n            exprs.push(fieldExpr + \" <= \" + valueExpr(upper, predicate.timeUnit));\n        }\n        return exprs.length > 0 ? exprs.join(' && ') : 'true';\n    }\n    /* istanbul ignore next: it should never reach here */\n    throw new Error(\"Invalid field predicate: \" + JSON.stringify(predicate));\n}\nexports.fieldFilterExpression = fieldFilterExpression;\nfunction valueExpr(v, timeUnit) {\n    if (datetime_1.isDateTime(v)) {\n        var expr = datetime_1.dateTimeExpr(v, true);\n        return 'time(' + expr + ')';\n    }\n    if (timeunit_1.isLocalSingleTimeUnit(timeUnit)) {\n        var datetime = {};\n        datetime[timeUnit] = v;\n        var expr = datetime_1.dateTimeExpr(datetime, true);\n        return 'time(' + expr + ')';\n    }\n    else if (timeunit_1.isUtcSingleTimeUnit(timeUnit)) {\n        return valueExpr(v, timeunit_1.getLocalTimeUnit(timeUnit));\n    }\n    return JSON.stringify(v);\n}\nfunction normalizePredicate(f) {\n    if (isFieldPredicate(f) && f.timeUnit) {\n        return __assign({}, f, { timeUnit: timeunit_1.normalizeTimeUnit(f.timeUnit) });\n    }\n    return f;\n}\nexports.normalizePredicate = normalizePredicate;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":125}},"hash":"544dec00b13f2b753e059a12beb2de6f","cacheData":{"env":{}}}