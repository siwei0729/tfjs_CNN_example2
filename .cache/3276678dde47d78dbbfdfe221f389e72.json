{"dependencies":[{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/package.json","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/.babelrc","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":1520897090000},{"name":"vega-util","loc":{"line":11,"column":26}},{"name":"../../data","loc":{"line":12,"column":21}},{"name":"../../datetime","loc":{"line":13,"column":25}},{"name":"../../log","loc":{"line":14,"column":18}},{"name":"../../predicate","loc":{"line":15,"column":26}},{"name":"../../transform","loc":{"line":16,"column":26}},{"name":"../../util","loc":{"line":17,"column":21}},{"name":"../model","loc":{"line":18,"column":22}},{"name":"../selection/selection","loc":{"line":19,"column":26}},{"name":"./aggregate","loc":{"line":20,"column":26}},{"name":"./bin","loc":{"line":21,"column":20}},{"name":"./calculate","loc":{"line":22,"column":26}},{"name":"./dataflow","loc":{"line":23,"column":25}},{"name":"./facet","loc":{"line":24,"column":22}},{"name":"./filter","loc":{"line":25,"column":23}},{"name":"./filterinvalid","loc":{"line":26,"column":30}},{"name":"./formatparse","loc":{"line":27,"column":28}},{"name":"./geojson","loc":{"line":28,"column":24}},{"name":"./geopoint","loc":{"line":29,"column":25}},{"name":"./indentifier","loc":{"line":30,"column":28}},{"name":"./lookup","loc":{"line":31,"column":23}},{"name":"./source","loc":{"line":32,"column":23}},{"name":"./stack","loc":{"line":33,"column":22}},{"name":"./timeunit","loc":{"line":34,"column":25}}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar data_1 = require(\"../../data\");\nvar datetime_1 = require(\"../../datetime\");\nvar log = require(\"../../log\");\nvar predicate_1 = require(\"../../predicate\");\nvar transform_1 = require(\"../../transform\");\nvar util_1 = require(\"../../util\");\nvar model_1 = require(\"../model\");\nvar selection_1 = require(\"../selection/selection\");\nvar aggregate_1 = require(\"./aggregate\");\nvar bin_1 = require(\"./bin\");\nvar calculate_1 = require(\"./calculate\");\nvar dataflow_1 = require(\"./dataflow\");\nvar facet_1 = require(\"./facet\");\nvar filter_1 = require(\"./filter\");\nvar filterinvalid_1 = require(\"./filterinvalid\");\nvar formatparse_1 = require(\"./formatparse\");\nvar geojson_1 = require(\"./geojson\");\nvar geopoint_1 = require(\"./geopoint\");\nvar indentifier_1 = require(\"./indentifier\");\nvar lookup_1 = require(\"./lookup\");\nvar source_1 = require(\"./source\");\nvar stack_1 = require(\"./stack\");\nvar timeunit_1 = require(\"./timeunit\");\nfunction parseRoot(model, sources) {\n    if (model.data || !model.parent) {\n        // if the model defines a data source or is the root, create a source node\n        var source = new source_1.SourceNode(model.data);\n        var hash = source.hash();\n        if (hash in sources) {\n            // use a reference if we already have a source\n            return sources[hash];\n        }\n        else {\n            // otherwise add a new one\n            sources[hash] = source;\n            return source;\n        }\n    }\n    else {\n        // If we don't have a source defined (overriding parent's data), use the parent's facet root or main.\n        return model.parent.component.data.facetRoot ? model.parent.component.data.facetRoot : model.parent.component.data.main;\n    }\n}\n/**\n * Parses a transforms array into a chain of connected dataflow nodes.\n */\nfunction parseTransformArray(parent, model) {\n    var lookupCounter = 0;\n    model.transforms.forEach(function (t) {\n        if (transform_1.isCalculate(t)) {\n            parent = new calculate_1.CalculateNode(parent, t);\n        }\n        else if (transform_1.isFilter(t)) {\n            // Automatically add a parse node for filters with filter objects\n            var parse = {};\n            var filter = t.filter;\n            var val = null;\n            // For EqualFilter, just use the equal property.\n            // For RangeFilter and OneOfFilter, all array members should have\n            // the same type, so we only use the first one.\n            if (predicate_1.isFieldEqualPredicate(filter)) {\n                val = filter.equal;\n            }\n            else if (predicate_1.isFieldRangePredicate(filter)) {\n                val = filter.range[0];\n            }\n            else if (predicate_1.isFieldOneOfPredicate(filter)) {\n                val = (filter.oneOf || filter['in'])[0];\n            } // else -- for filter expression, we can't infer anything\n            if (val) {\n                if (datetime_1.isDateTime(val)) {\n                    parse[filter['field']] = 'date';\n                }\n                else if (vega_util_1.isNumber(val)) {\n                    parse[filter['field']] = 'number';\n                }\n                else if (vega_util_1.isString(val)) {\n                    parse[filter['field']] = 'string';\n                }\n            }\n            if (util_1.keys(parse).length > 0) {\n                parent = new formatparse_1.ParseNode(parent, parse);\n            }\n            parent = new filter_1.FilterNode(parent, model, t.filter);\n        }\n        else if (transform_1.isBin(t)) {\n            parent = bin_1.BinNode.makeFromTransform(parent, t, model);\n        }\n        else if (transform_1.isTimeUnit(t)) {\n            parent = timeunit_1.TimeUnitNode.makeFromTransform(parent, t);\n        }\n        else if (transform_1.isAggregate(t)) {\n            parent = aggregate_1.AggregateNode.makeFromTransform(parent, t);\n            if (selection_1.requiresSelectionId(model)) {\n                parent = new indentifier_1.IdentifierNode(parent);\n            }\n        }\n        else if (transform_1.isLookup(t)) {\n            parent = lookup_1.LookupNode.make(parent, model, t, lookupCounter++);\n        }\n        else {\n            log.warn(log.message.invalidTransformIgnored(t));\n            return;\n        }\n    });\n    return parent;\n}\nexports.parseTransformArray = parseTransformArray;\n/*\nDescription of the dataflow (http://asciiflow.com/):\n     +--------+\n     | Source |\n     +---+----+\n         |\n         v\n     Transforms\n(Filter, Calculate, ...)\n         |\n         v\n     FormatParse\n         |\n         v\n      Binning\n         |\n         v\n      Timeunit\n         |\n         v\n      +--+--+\n      | Raw |\n      +-----+\n         |\n         v\n     Aggregate\n         |\n         v\n       Stack\n         |\n         v\n     Path Order\n         |\n         v\n  Invalid Filter\n         |\n         v\n   +----------+\n   |   Main   |\n   +----------+\n         |\n         v\n     +-------+\n     | Facet |----> \"column\", \"column-layout\", and \"row\"\n     +-------+\n         |\n         v\n  ...Child data...\n*/\nfunction parseData(model) {\n    var head = parseRoot(model, model.component.data.sources);\n    var outputNodes = model.component.data.outputNodes;\n    var outputNodeRefCounts = model.component.data.outputNodeRefCounts;\n    // Default discrete selections require an identifier transform to\n    // uniquely identify data points as the _id field is volatile. Add\n    // this transform at the head of our pipeline such that the identifier\n    // field is available for all subsequent datasets. Additional identifier\n    // transforms will be necessary when new tuples are constructed\n    // (e.g., post-aggregation).\n    if (selection_1.requiresSelectionId(model) && !model.parent) {\n        head = new indentifier_1.IdentifierNode(head);\n    }\n    // HACK: This is equivalent for merging bin extent for union scale.\n    // FIXME(https://github.com/vega/vega-lite/issues/2270): Correctly merge extent / bin node for shared bin scale\n    var parentIsLayer = model.parent && model_1.isLayerModel(model.parent);\n    if (model_1.isUnitModel(model) || model_1.isFacetModel(model)) {\n        if (parentIsLayer) {\n            head = bin_1.BinNode.makeFromEncoding(head, model) || head;\n        }\n    }\n    if (model.transforms.length > 0) {\n        head = parseTransformArray(head, model);\n    }\n    var parse = formatparse_1.ParseNode.make(head, model);\n    if (parse) {\n        head = parse;\n    }\n    if (model_1.isUnitModel(model)) {\n        head = geojson_1.GeoJSONNode.parseAll(head, model);\n        head = geopoint_1.GeoPointNode.parseAll(head, model);\n    }\n    if (model_1.isUnitModel(model) || model_1.isFacetModel(model)) {\n        if (!parentIsLayer) {\n            head = bin_1.BinNode.makeFromEncoding(head, model) || head;\n        }\n        head = timeunit_1.TimeUnitNode.makeFromEncoding(head, model) || head;\n    }\n    // add an output node pre aggregation\n    var rawName = model.getName(data_1.RAW);\n    var raw = new dataflow_1.OutputNode(head, rawName, data_1.RAW, outputNodeRefCounts);\n    outputNodes[rawName] = raw;\n    head = raw;\n    if (model_1.isUnitModel(model)) {\n        var agg = aggregate_1.AggregateNode.makeFromEncoding(head, model);\n        if (agg) {\n            head = agg;\n            if (selection_1.requiresSelectionId(model)) {\n                head = new indentifier_1.IdentifierNode(head);\n            }\n        }\n        head = stack_1.StackNode.make(head, model) || head;\n    }\n    if (model_1.isUnitModel(model)) {\n        head = filterinvalid_1.FilterInvalidNode.make(head, model) || head;\n    }\n    // output node for marks\n    var mainName = model.getName(data_1.MAIN);\n    var main = new dataflow_1.OutputNode(head, mainName, data_1.MAIN, outputNodeRefCounts);\n    outputNodes[mainName] = main;\n    head = main;\n    // add facet marker\n    var facetRoot = null;\n    if (model_1.isFacetModel(model)) {\n        var facetName = model.getName('facet');\n        facetRoot = new facet_1.FacetNode(head, model, facetName, main.getSource());\n        outputNodes[facetName] = facetRoot;\n        head = facetRoot;\n    }\n    // add the format parse from this model so that children don't parse the same field again\n    var ancestorParse = __assign({}, model.component.data.ancestorParse, (parse ? parse.parse : {}));\n    return __assign({}, model.component.data, { outputNodes: outputNodes,\n        outputNodeRefCounts: outputNodeRefCounts,\n        raw: raw,\n        main: main,\n        facetRoot: facetRoot,\n        ancestorParse: ancestorParse });\n}\nexports.parseData = parseData;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/data/parse.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}}],"sources":{"node_modules/vega-lite/build/src/compile/data/parse.js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar data_1 = require(\"../../data\");\nvar datetime_1 = require(\"../../datetime\");\nvar log = require(\"../../log\");\nvar predicate_1 = require(\"../../predicate\");\nvar transform_1 = require(\"../../transform\");\nvar util_1 = require(\"../../util\");\nvar model_1 = require(\"../model\");\nvar selection_1 = require(\"../selection/selection\");\nvar aggregate_1 = require(\"./aggregate\");\nvar bin_1 = require(\"./bin\");\nvar calculate_1 = require(\"./calculate\");\nvar dataflow_1 = require(\"./dataflow\");\nvar facet_1 = require(\"./facet\");\nvar filter_1 = require(\"./filter\");\nvar filterinvalid_1 = require(\"./filterinvalid\");\nvar formatparse_1 = require(\"./formatparse\");\nvar geojson_1 = require(\"./geojson\");\nvar geopoint_1 = require(\"./geopoint\");\nvar indentifier_1 = require(\"./indentifier\");\nvar lookup_1 = require(\"./lookup\");\nvar source_1 = require(\"./source\");\nvar stack_1 = require(\"./stack\");\nvar timeunit_1 = require(\"./timeunit\");\nfunction parseRoot(model, sources) {\n    if (model.data || !model.parent) {\n        // if the model defines a data source or is the root, create a source node\n        var source = new source_1.SourceNode(model.data);\n        var hash = source.hash();\n        if (hash in sources) {\n            // use a reference if we already have a source\n            return sources[hash];\n        }\n        else {\n            // otherwise add a new one\n            sources[hash] = source;\n            return source;\n        }\n    }\n    else {\n        // If we don't have a source defined (overriding parent's data), use the parent's facet root or main.\n        return model.parent.component.data.facetRoot ? model.parent.component.data.facetRoot : model.parent.component.data.main;\n    }\n}\n/**\n * Parses a transforms array into a chain of connected dataflow nodes.\n */\nfunction parseTransformArray(parent, model) {\n    var lookupCounter = 0;\n    model.transforms.forEach(function (t) {\n        if (transform_1.isCalculate(t)) {\n            parent = new calculate_1.CalculateNode(parent, t);\n        }\n        else if (transform_1.isFilter(t)) {\n            // Automatically add a parse node for filters with filter objects\n            var parse = {};\n            var filter = t.filter;\n            var val = null;\n            // For EqualFilter, just use the equal property.\n            // For RangeFilter and OneOfFilter, all array members should have\n            // the same type, so we only use the first one.\n            if (predicate_1.isFieldEqualPredicate(filter)) {\n                val = filter.equal;\n            }\n            else if (predicate_1.isFieldRangePredicate(filter)) {\n                val = filter.range[0];\n            }\n            else if (predicate_1.isFieldOneOfPredicate(filter)) {\n                val = (filter.oneOf || filter['in'])[0];\n            } // else -- for filter expression, we can't infer anything\n            if (val) {\n                if (datetime_1.isDateTime(val)) {\n                    parse[filter['field']] = 'date';\n                }\n                else if (vega_util_1.isNumber(val)) {\n                    parse[filter['field']] = 'number';\n                }\n                else if (vega_util_1.isString(val)) {\n                    parse[filter['field']] = 'string';\n                }\n            }\n            if (util_1.keys(parse).length > 0) {\n                parent = new formatparse_1.ParseNode(parent, parse);\n            }\n            parent = new filter_1.FilterNode(parent, model, t.filter);\n        }\n        else if (transform_1.isBin(t)) {\n            parent = bin_1.BinNode.makeFromTransform(parent, t, model);\n        }\n        else if (transform_1.isTimeUnit(t)) {\n            parent = timeunit_1.TimeUnitNode.makeFromTransform(parent, t);\n        }\n        else if (transform_1.isAggregate(t)) {\n            parent = aggregate_1.AggregateNode.makeFromTransform(parent, t);\n            if (selection_1.requiresSelectionId(model)) {\n                parent = new indentifier_1.IdentifierNode(parent);\n            }\n        }\n        else if (transform_1.isLookup(t)) {\n            parent = lookup_1.LookupNode.make(parent, model, t, lookupCounter++);\n        }\n        else {\n            log.warn(log.message.invalidTransformIgnored(t));\n            return;\n        }\n    });\n    return parent;\n}\nexports.parseTransformArray = parseTransformArray;\n/*\nDescription of the dataflow (http://asciiflow.com/):\n     +--------+\n     | Source |\n     +---+----+\n         |\n         v\n     Transforms\n(Filter, Calculate, ...)\n         |\n         v\n     FormatParse\n         |\n         v\n      Binning\n         |\n         v\n      Timeunit\n         |\n         v\n      +--+--+\n      | Raw |\n      +-----+\n         |\n         v\n     Aggregate\n         |\n         v\n       Stack\n         |\n         v\n     Path Order\n         |\n         v\n  Invalid Filter\n         |\n         v\n   +----------+\n   |   Main   |\n   +----------+\n         |\n         v\n     +-------+\n     | Facet |----> \"column\", \"column-layout\", and \"row\"\n     +-------+\n         |\n         v\n  ...Child data...\n*/\nfunction parseData(model) {\n    var head = parseRoot(model, model.component.data.sources);\n    var outputNodes = model.component.data.outputNodes;\n    var outputNodeRefCounts = model.component.data.outputNodeRefCounts;\n    // Default discrete selections require an identifier transform to\n    // uniquely identify data points as the _id field is volatile. Add\n    // this transform at the head of our pipeline such that the identifier\n    // field is available for all subsequent datasets. Additional identifier\n    // transforms will be necessary when new tuples are constructed\n    // (e.g., post-aggregation).\n    if (selection_1.requiresSelectionId(model) && !model.parent) {\n        head = new indentifier_1.IdentifierNode(head);\n    }\n    // HACK: This is equivalent for merging bin extent for union scale.\n    // FIXME(https://github.com/vega/vega-lite/issues/2270): Correctly merge extent / bin node for shared bin scale\n    var parentIsLayer = model.parent && model_1.isLayerModel(model.parent);\n    if (model_1.isUnitModel(model) || model_1.isFacetModel(model)) {\n        if (parentIsLayer) {\n            head = bin_1.BinNode.makeFromEncoding(head, model) || head;\n        }\n    }\n    if (model.transforms.length > 0) {\n        head = parseTransformArray(head, model);\n    }\n    var parse = formatparse_1.ParseNode.make(head, model);\n    if (parse) {\n        head = parse;\n    }\n    if (model_1.isUnitModel(model)) {\n        head = geojson_1.GeoJSONNode.parseAll(head, model);\n        head = geopoint_1.GeoPointNode.parseAll(head, model);\n    }\n    if (model_1.isUnitModel(model) || model_1.isFacetModel(model)) {\n        if (!parentIsLayer) {\n            head = bin_1.BinNode.makeFromEncoding(head, model) || head;\n        }\n        head = timeunit_1.TimeUnitNode.makeFromEncoding(head, model) || head;\n    }\n    // add an output node pre aggregation\n    var rawName = model.getName(data_1.RAW);\n    var raw = new dataflow_1.OutputNode(head, rawName, data_1.RAW, outputNodeRefCounts);\n    outputNodes[rawName] = raw;\n    head = raw;\n    if (model_1.isUnitModel(model)) {\n        var agg = aggregate_1.AggregateNode.makeFromEncoding(head, model);\n        if (agg) {\n            head = agg;\n            if (selection_1.requiresSelectionId(model)) {\n                head = new indentifier_1.IdentifierNode(head);\n            }\n        }\n        head = stack_1.StackNode.make(head, model) || head;\n    }\n    if (model_1.isUnitModel(model)) {\n        head = filterinvalid_1.FilterInvalidNode.make(head, model) || head;\n    }\n    // output node for marks\n    var mainName = model.getName(data_1.MAIN);\n    var main = new dataflow_1.OutputNode(head, mainName, data_1.MAIN, outputNodeRefCounts);\n    outputNodes[mainName] = main;\n    head = main;\n    // add facet marker\n    var facetRoot = null;\n    if (model_1.isFacetModel(model)) {\n        var facetName = model.getName('facet');\n        facetRoot = new facet_1.FacetNode(head, model, facetName, main.getSource());\n        outputNodes[facetName] = facetRoot;\n        head = facetRoot;\n    }\n    // add the format parse from this model so that children don't parse the same field again\n    var ancestorParse = __assign({}, model.component.data.ancestorParse, (parse ? parse.parse : {}));\n    return __assign({}, model.component.data, { outputNodes: outputNodes,\n        outputNodeRefCounts: outputNodeRefCounts,\n        raw: raw,\n        main: main,\n        facetRoot: facetRoot,\n        ancestorParse: ancestorParse });\n}\nexports.parseData = parseData;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":248}},"hash":"f182a57836c6495a85f8316a720ed55f","cacheData":{"env":{}}}