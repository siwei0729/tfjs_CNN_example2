{"dependencies":[{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/package.json","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/.babelrc","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs-examples/mnist/node_modules/vega-dataflow/package.json","includedInParent":true,"mtime":1518291445000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (target, sources) {\n  var targetRank = target.rank,\n      i,\n      n;\n\n  for (i = 0, n = sources.length; i < n; ++i) {\n    if (targetRank < sources[i].rank) {\n      this.rerank(target);\n      return;\n    }\n  }\n};","map":{"mappings":[{"generated":{"line":7,"column":18},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":9,"column":15}},{"name":"target","generated":{"line":7,"column":28},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":9,"column":24}},{"generated":{"line":7,"column":34},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":9,"column":15}},{"name":"sources","generated":{"line":7,"column":36},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":9,"column":32}},{"generated":{"line":7,"column":43},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":9,"column":15}},{"generated":{"line":7,"column":45},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":9,"column":41}},{"generated":{"line":8,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":2}},{"name":"targetRank","generated":{"line":8,"column":6},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":6}},{"name":"target","generated":{"line":8,"column":19},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":19}},{"name":"rank","generated":{"line":8,"column":26},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":26}},{"generated":{"line":8,"column":30},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":2}},{"generated":{"line":9,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":2}},{"name":"i","generated":{"line":9,"column":6},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":32}},{"generated":{"line":9,"column":7},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":2}},{"generated":{"line":10,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":2}},{"name":"n","generated":{"line":10,"column":6},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":35}},{"generated":{"line":10,"column":7},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":10,"column":2}},{"generated":{"line":12,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":2}},{"name":"i","generated":{"line":12,"column":7},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":7}},{"generated":{"line":12,"column":11},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":9}},{"generated":{"line":12,"column":12},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":7}},{"name":"n","generated":{"line":12,"column":14},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":12}},{"name":"sources","generated":{"line":12,"column":18},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":14}},{"name":"length","generated":{"line":12,"column":26},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":22}},{"generated":{"line":12,"column":32},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":2}},{"name":"i","generated":{"line":12,"column":34},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":30}},{"name":"n","generated":{"line":12,"column":38},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":32}},{"generated":{"line":12,"column":39},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":2}},{"generated":{"line":12,"column":41},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":35}},{"name":"i","generated":{"line":12,"column":43},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":37}},{"generated":{"line":12,"column":44},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":2}},{"generated":{"line":12,"column":46},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":12,"column":40}},{"generated":{"line":13,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":13,"column":4}},{"name":"targetRank","generated":{"line":13,"column":8},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":13,"column":8}},{"name":"sources","generated":{"line":13,"column":21},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":13,"column":21}},{"name":"i","generated":{"line":13,"column":29},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":13,"column":29}},{"generated":{"line":13,"column":30},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":13,"column":21}},{"name":"rank","generated":{"line":13,"column":32},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":13,"column":32}},{"generated":{"line":13,"column":36},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":13,"column":4}},{"generated":{"line":13,"column":38},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":13,"column":38}},{"generated":{"line":14,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":14,"column":6}},{"name":"rerank","generated":{"line":14,"column":11},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":14,"column":11}},{"generated":{"line":14,"column":17},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":14,"column":6}},{"name":"target","generated":{"line":14,"column":18},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":14,"column":18}},{"generated":{"line":14,"column":24},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":14,"column":6}},{"generated":{"line":15,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":15,"column":6}},{"generated":{"line":16,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":16,"column":5}},{"generated":{"line":17,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":17,"column":3}},{"generated":{"line":18,"column":0},"source":"node_modules/vega-dataflow/src/dataflow/connect.js","original":{"line":18,"column":1}}],"sources":{"node_modules/vega-dataflow/src/dataflow/connect.js":"/**\n * Connect a target operator as a dependent of source operators.\n * If necessary, this method will rerank the target operator and its\n * dependents to ensure propagation proceeds in a topologically sorted order.\n * @param {Operator} target - The target operator.\n * @param {Array<Operator>} - The source operators that should propagate\n *   to the target operator.\n */\nexport default function(target, sources) {\n  var targetRank = target.rank, i, n;\n\n  for (i=0, n=sources.length; i<n; ++i) {\n    if (targetRank < sources[i].rank) {\n      this.rerank(target);\n      return;\n    }\n  }\n}\n"},"lineCount":null}},"hash":"5101f28992e54a2bd0baf03fd277e7f2","cacheData":{"env":{}}}