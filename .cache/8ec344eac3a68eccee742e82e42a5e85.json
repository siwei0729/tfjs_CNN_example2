{"dependencies":[{"name":"/Users/summertime/Documents/GitHub/tfjs_CNN_example2/package.json","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs_CNN_example2/.babelrc","includedInParent":true,"mtime":1527740925000},{"name":"/Users/summertime/Documents/GitHub/tfjs_CNN_example2/node_modules/vega-lite/build/package.json","includedInParent":true,"mtime":1520897090000},{"name":"vega-util","loc":{"line":11,"column":26}},{"name":"../../fielddef","loc":{"line":12,"column":25}},{"name":"../../log","loc":{"line":13,"column":18}},{"name":"../../predicate","loc":{"line":14,"column":26}},{"name":"../../util","loc":{"line":15,"column":21}},{"name":"../../vega.schema","loc":{"line":16,"column":28}},{"name":"../common","loc":{"line":17,"column":23}},{"name":"../selection/selection","loc":{"line":18,"column":26}},{"name":"./valueref","loc":{"line":19,"column":18}}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar log = require(\"../../log\");\nvar predicate_1 = require(\"../../predicate\");\nvar util_1 = require(\"../../util\");\nvar vega_schema_1 = require(\"../../vega.schema\");\nvar common_1 = require(\"../common\");\nvar selection_1 = require(\"../selection/selection\");\nvar ref = require(\"./valueref\");\nfunction color(model) {\n    var config = model.config;\n    var _a = model.markDef, filled = _a.filled, markType = _a.type;\n    var vgChannel = filled ? 'fill' : 'stroke';\n    return __assign({}, (util_1.contains(['bar', 'point', 'circle', 'square', 'geoshape'], markType) ?\n        { fill: { value: 'transparent' } } :\n        {}), nonPosition('color', model, {\n        vgChannel: vgChannel,\n        // Mark definition has higher precedence than config;\n        // fill/stroke has higher precedence than color.\n        defaultValue: model.markDef[vgChannel] ||\n            model.markDef.color ||\n            common_1.getMarkConfig(vgChannel, model.markDef, config) ||\n            common_1.getMarkConfig('color', model.markDef, config)\n    }), nonPosition('fill', model), nonPosition('stroke', model));\n}\nexports.color = color;\nfunction baseEncodeEntry(model, ignore) {\n    return __assign({}, markDefProperties(model.markDef, ignore), color(model), nonPosition('opacity', model), text(model, 'tooltip'), text(model, 'href'));\n}\nexports.baseEncodeEntry = baseEncodeEntry;\nfunction markDefProperties(mark, ignore) {\n    return vega_schema_1.VG_MARK_CONFIGS.reduce(function (m, prop) {\n        if (mark[prop] !== undefined && ignore[prop] !== 'ignore') {\n            m[prop] = { value: mark[prop] };\n        }\n        return m;\n    }, {});\n}\nfunction valueIfDefined(prop, value) {\n    if (value !== undefined) {\n        return _a = {}, _a[prop] = { value: value }, _a;\n    }\n    return undefined;\n    var _a;\n}\nexports.valueIfDefined = valueIfDefined;\n/**\n * Return mixins for non-positional channels with scales.  (Text doesn't have scale.)\n */\nfunction nonPosition(channel, model, opt) {\n    if (opt === void 0) { opt = {}; }\n    var defaultValue = opt.defaultValue, vgChannel = opt.vgChannel;\n    var defaultRef = opt.defaultRef || (defaultValue !== undefined ? { value: defaultValue } : undefined);\n    var channelDef = model.encoding[channel];\n    return wrapCondition(model, channelDef, vgChannel || channel, function (cDef) {\n        return ref.midPoint(channel, cDef, model.scaleName(channel), model.getScaleComponent(channel), null, // No need to provide stack for non-position as it does not affect mid point\n        defaultRef);\n    });\n}\nexports.nonPosition = nonPosition;\n/**\n * Return a mixin that include a Vega production rule for a Vega-Lite conditional channel definition.\n * or a simple mixin if channel def has no condition.\n */\nfunction wrapCondition(model, channelDef, vgChannel, refFn) {\n    var condition = channelDef && channelDef.condition;\n    var valueRef = refFn(channelDef);\n    if (condition) {\n        var conditions = vega_util_1.isArray(condition) ? condition : [condition];\n        var vgConditions = conditions.map(function (c) {\n            var conditionValueRef = refFn(c);\n            var test = fielddef_1.isConditionalSelection(c) ? selection_1.selectionPredicate(model, c.selection) : predicate_1.expression(model, c.test);\n            return __assign({ test: test }, conditionValueRef);\n        });\n        return _a = {},\n            _a[vgChannel] = vgConditions.concat((valueRef !== undefined ? [valueRef] : [])),\n            _a;\n    }\n    else {\n        return valueRef !== undefined ? (_b = {}, _b[vgChannel] = valueRef, _b) : {};\n    }\n    var _a, _b;\n}\nfunction text(model, channel) {\n    if (channel === void 0) { channel = 'text'; }\n    var channelDef = model.encoding[channel];\n    return wrapCondition(model, channelDef, channel, function (cDef) { return ref.text(cDef, model.config); });\n}\nexports.text = text;\nfunction bandPosition(fieldDef, channel, model) {\n    var scaleName = model.scaleName(channel);\n    var sizeChannel = channel === 'x' ? 'width' : 'height';\n    if (model.encoding.size || model.markDef.size !== undefined) {\n        var orient = model.markDef.orient;\n        if (orient) {\n            var centeredBandPositionMixins = (_a = {},\n                // Use xc/yc and place the mark at the middle of the band\n                // This way we never have to deal with size's condition for x/y position.\n                _a[channel + 'c'] = ref.fieldRef(fieldDef, scaleName, {}, { band: 0.5 }),\n                _a);\n            if (fielddef_1.getFieldDef(model.encoding.size)) {\n                log.warn(log.message.cannotUseSizeFieldWithBandSize(channel));\n                // TODO: apply size to band and set scale range to some values between 0-1.\n                // return {\n                //   ...centeredBandPositionMixins,\n                //   ...bandSize('size', model, {vgChannel: sizeChannel})\n                // };\n            }\n            else if (fielddef_1.isValueDef(model.encoding.size)) {\n                return __assign({}, centeredBandPositionMixins, nonPosition('size', model, { vgChannel: sizeChannel }));\n            }\n            else if (model.markDef.size !== undefined) {\n                return __assign({}, centeredBandPositionMixins, (_b = {}, _b[sizeChannel] = { value: model.markDef.size }, _b));\n            }\n        }\n        else {\n            log.warn(log.message.cannotApplySizeToNonOrientedMark(model.markDef.type));\n        }\n    }\n    return _c = {},\n        _c[channel] = ref.fieldRef(fieldDef, scaleName, { binSuffix: 'range' }),\n        _c[sizeChannel] = ref.bandRef(scaleName),\n        _c;\n    var _a, _b, _c;\n}\nexports.bandPosition = bandPosition;\nfunction centeredBandPosition(channel, model, defaultPosRef, defaultSizeRef) {\n    var centerChannel = channel === 'x' ? 'xc' : 'yc';\n    var sizeChannel = channel === 'x' ? 'width' : 'height';\n    return __assign({}, pointPosition(channel, model, defaultPosRef, centerChannel), nonPosition('size', model, { defaultRef: defaultSizeRef, vgChannel: sizeChannel }));\n}\nexports.centeredBandPosition = centeredBandPosition;\nfunction binnedPosition(fieldDef, channel, scaleName, spacing, reverse) {\n    if (channel === 'x') {\n        return {\n            x2: ref.bin(fieldDef, scaleName, 'start', reverse ? 0 : spacing),\n            x: ref.bin(fieldDef, scaleName, 'end', reverse ? spacing : 0)\n        };\n    }\n    else {\n        return {\n            y2: ref.bin(fieldDef, scaleName, 'start', reverse ? spacing : 0),\n            y: ref.bin(fieldDef, scaleName, 'end', reverse ? 0 : spacing)\n        };\n    }\n}\nexports.binnedPosition = binnedPosition;\n/**\n * Return mixins for point (non-band) position channels.\n */\nfunction pointPosition(channel, model, defaultRef, vgChannel) {\n    // TODO: refactor how refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613\n    var encoding = model.encoding, stack = model.stack;\n    var channelDef = encoding[channel];\n    var valueRef = !channelDef && (encoding.latitude || encoding.longitude) ?\n        // use geopoint output if there are lat/long and there is no point position overriding lat/long.\n        { field: model.getName(channel) } :\n        ref.stackable(channel, encoding[channel], model.scaleName(channel), model.getScaleComponent(channel), stack, defaultRef);\n    return _a = {},\n        _a[vgChannel || channel] = valueRef,\n        _a;\n    var _a;\n}\nexports.pointPosition = pointPosition;\n/**\n * Return mixins for x2, y2.\n * If channel is not specified, return one channel based on orientation.\n */\nfunction pointPosition2(model, defaultRef, channel) {\n    var encoding = model.encoding, markDef = model.markDef, stack = model.stack;\n    channel = channel || (markDef.orient === 'horizontal' ? 'x2' : 'y2');\n    var baseChannel = channel === 'x2' ? 'x' : 'y';\n    var channelDef = encoding[baseChannel];\n    var valueRef = !channelDef && (encoding.latitude || encoding.longitude) ?\n        // use geopoint output if there are lat2/long2 and there is no point position2 overriding lat2/long2.\n        { field: model.getName(channel) } :\n        ref.stackable2(channel, channelDef, encoding[channel], model.scaleName(baseChannel), model.getScaleComponent(baseChannel), stack, defaultRef);\n    return _a = {}, _a[channel] = valueRef, _a;\n    var _a;\n}\nexports.pointPosition2 = pointPosition2;\n//# sourceMappingURL=data:application/json;base64,","map":{"mappings":[{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/vega-lite/build/src/compile/mark/mixins.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}}],"sources":{"node_modules/vega-lite/build/src/compile/mark/mixins.js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vega_util_1 = require(\"vega-util\");\nvar fielddef_1 = require(\"../../fielddef\");\nvar log = require(\"../../log\");\nvar predicate_1 = require(\"../../predicate\");\nvar util_1 = require(\"../../util\");\nvar vega_schema_1 = require(\"../../vega.schema\");\nvar common_1 = require(\"../common\");\nvar selection_1 = require(\"../selection/selection\");\nvar ref = require(\"./valueref\");\nfunction color(model) {\n    var config = model.config;\n    var _a = model.markDef, filled = _a.filled, markType = _a.type;\n    var vgChannel = filled ? 'fill' : 'stroke';\n    return __assign({}, (util_1.contains(['bar', 'point', 'circle', 'square', 'geoshape'], markType) ?\n        { fill: { value: 'transparent' } } :\n        {}), nonPosition('color', model, {\n        vgChannel: vgChannel,\n        // Mark definition has higher precedence than config;\n        // fill/stroke has higher precedence than color.\n        defaultValue: model.markDef[vgChannel] ||\n            model.markDef.color ||\n            common_1.getMarkConfig(vgChannel, model.markDef, config) ||\n            common_1.getMarkConfig('color', model.markDef, config)\n    }), nonPosition('fill', model), nonPosition('stroke', model));\n}\nexports.color = color;\nfunction baseEncodeEntry(model, ignore) {\n    return __assign({}, markDefProperties(model.markDef, ignore), color(model), nonPosition('opacity', model), text(model, 'tooltip'), text(model, 'href'));\n}\nexports.baseEncodeEntry = baseEncodeEntry;\nfunction markDefProperties(mark, ignore) {\n    return vega_schema_1.VG_MARK_CONFIGS.reduce(function (m, prop) {\n        if (mark[prop] !== undefined && ignore[prop] !== 'ignore') {\n            m[prop] = { value: mark[prop] };\n        }\n        return m;\n    }, {});\n}\nfunction valueIfDefined(prop, value) {\n    if (value !== undefined) {\n        return _a = {}, _a[prop] = { value: value }, _a;\n    }\n    return undefined;\n    var _a;\n}\nexports.valueIfDefined = valueIfDefined;\n/**\n * Return mixins for non-positional channels with scales.  (Text doesn't have scale.)\n */\nfunction nonPosition(channel, model, opt) {\n    if (opt === void 0) { opt = {}; }\n    var defaultValue = opt.defaultValue, vgChannel = opt.vgChannel;\n    var defaultRef = opt.defaultRef || (defaultValue !== undefined ? { value: defaultValue } : undefined);\n    var channelDef = model.encoding[channel];\n    return wrapCondition(model, channelDef, vgChannel || channel, function (cDef) {\n        return ref.midPoint(channel, cDef, model.scaleName(channel), model.getScaleComponent(channel), null, // No need to provide stack for non-position as it does not affect mid point\n        defaultRef);\n    });\n}\nexports.nonPosition = nonPosition;\n/**\n * Return a mixin that include a Vega production rule for a Vega-Lite conditional channel definition.\n * or a simple mixin if channel def has no condition.\n */\nfunction wrapCondition(model, channelDef, vgChannel, refFn) {\n    var condition = channelDef && channelDef.condition;\n    var valueRef = refFn(channelDef);\n    if (condition) {\n        var conditions = vega_util_1.isArray(condition) ? condition : [condition];\n        var vgConditions = conditions.map(function (c) {\n            var conditionValueRef = refFn(c);\n            var test = fielddef_1.isConditionalSelection(c) ? selection_1.selectionPredicate(model, c.selection) : predicate_1.expression(model, c.test);\n            return __assign({ test: test }, conditionValueRef);\n        });\n        return _a = {},\n            _a[vgChannel] = vgConditions.concat((valueRef !== undefined ? [valueRef] : [])),\n            _a;\n    }\n    else {\n        return valueRef !== undefined ? (_b = {}, _b[vgChannel] = valueRef, _b) : {};\n    }\n    var _a, _b;\n}\nfunction text(model, channel) {\n    if (channel === void 0) { channel = 'text'; }\n    var channelDef = model.encoding[channel];\n    return wrapCondition(model, channelDef, channel, function (cDef) { return ref.text(cDef, model.config); });\n}\nexports.text = text;\nfunction bandPosition(fieldDef, channel, model) {\n    var scaleName = model.scaleName(channel);\n    var sizeChannel = channel === 'x' ? 'width' : 'height';\n    if (model.encoding.size || model.markDef.size !== undefined) {\n        var orient = model.markDef.orient;\n        if (orient) {\n            var centeredBandPositionMixins = (_a = {},\n                // Use xc/yc and place the mark at the middle of the band\n                // This way we never have to deal with size's condition for x/y position.\n                _a[channel + 'c'] = ref.fieldRef(fieldDef, scaleName, {}, { band: 0.5 }),\n                _a);\n            if (fielddef_1.getFieldDef(model.encoding.size)) {\n                log.warn(log.message.cannotUseSizeFieldWithBandSize(channel));\n                // TODO: apply size to band and set scale range to some values between 0-1.\n                // return {\n                //   ...centeredBandPositionMixins,\n                //   ...bandSize('size', model, {vgChannel: sizeChannel})\n                // };\n            }\n            else if (fielddef_1.isValueDef(model.encoding.size)) {\n                return __assign({}, centeredBandPositionMixins, nonPosition('size', model, { vgChannel: sizeChannel }));\n            }\n            else if (model.markDef.size !== undefined) {\n                return __assign({}, centeredBandPositionMixins, (_b = {}, _b[sizeChannel] = { value: model.markDef.size }, _b));\n            }\n        }\n        else {\n            log.warn(log.message.cannotApplySizeToNonOrientedMark(model.markDef.type));\n        }\n    }\n    return _c = {},\n        _c[channel] = ref.fieldRef(fieldDef, scaleName, { binSuffix: 'range' }),\n        _c[sizeChannel] = ref.bandRef(scaleName),\n        _c;\n    var _a, _b, _c;\n}\nexports.bandPosition = bandPosition;\nfunction centeredBandPosition(channel, model, defaultPosRef, defaultSizeRef) {\n    var centerChannel = channel === 'x' ? 'xc' : 'yc';\n    var sizeChannel = channel === 'x' ? 'width' : 'height';\n    return __assign({}, pointPosition(channel, model, defaultPosRef, centerChannel), nonPosition('size', model, { defaultRef: defaultSizeRef, vgChannel: sizeChannel }));\n}\nexports.centeredBandPosition = centeredBandPosition;\nfunction binnedPosition(fieldDef, channel, scaleName, spacing, reverse) {\n    if (channel === 'x') {\n        return {\n            x2: ref.bin(fieldDef, scaleName, 'start', reverse ? 0 : spacing),\n            x: ref.bin(fieldDef, scaleName, 'end', reverse ? spacing : 0)\n        };\n    }\n    else {\n        return {\n            y2: ref.bin(fieldDef, scaleName, 'start', reverse ? spacing : 0),\n            y: ref.bin(fieldDef, scaleName, 'end', reverse ? 0 : spacing)\n        };\n    }\n}\nexports.binnedPosition = binnedPosition;\n/**\n * Return mixins for point (non-band) position channels.\n */\nfunction pointPosition(channel, model, defaultRef, vgChannel) {\n    // TODO: refactor how refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613\n    var encoding = model.encoding, stack = model.stack;\n    var channelDef = encoding[channel];\n    var valueRef = !channelDef && (encoding.latitude || encoding.longitude) ?\n        // use geopoint output if there are lat/long and there is no point position overriding lat/long.\n        { field: model.getName(channel) } :\n        ref.stackable(channel, encoding[channel], model.scaleName(channel), model.getScaleComponent(channel), stack, defaultRef);\n    return _a = {},\n        _a[vgChannel || channel] = valueRef,\n        _a;\n    var _a;\n}\nexports.pointPosition = pointPosition;\n/**\n * Return mixins for x2, y2.\n * If channel is not specified, return one channel based on orientation.\n */\nfunction pointPosition2(model, defaultRef, channel) {\n    var encoding = model.encoding, markDef = model.markDef, stack = model.stack;\n    channel = channel || (markDef.orient === 'horizontal' ? 'x2' : 'y2');\n    var baseChannel = channel === 'x2' ? 'x' : 'y';\n    var channelDef = encoding[baseChannel];\n    var valueRef = !channelDef && (encoding.latitude || encoding.longitude) ?\n        // use geopoint output if there are lat2/long2 and there is no point position2 overriding lat2/long2.\n        { field: model.getName(channel) } :\n        ref.stackable2(channel, channelDef, encoding[channel], model.scaleName(baseChannel), model.getScaleComponent(baseChannel), stack, defaultRef);\n    return _a = {}, _a[channel] = valueRef, _a;\n    var _a;\n}\nexports.pointPosition2 = pointPosition2;\n//# sourceMappingURL=data:application/json;base64,"},"lineCount":192}},"hash":"a2400c74184988256e264a14d50f2b01","cacheData":{"env":{}}}